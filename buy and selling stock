// BEST TIME TO BUY AND SELL THE STOCK
// BRUTE FORCE APPROACH
EXAMPLE : [7,1,5,3,6,4]
TAKE I AS THE FIRST INDEX AND J AS I+1 AND INCREMENT J UNTIL U REACH THE LOOP AND MAKE DIFFERECE BETWEEN THE ELEMENTS IF THE NUMBERS ARE GREATER THAN I.
THIS TAKES O(N^2) AND SPACE COMPLEXITY O(1).

// OPTIMAL APPROACH
class Solution {
    public int maxProfit(int[] prices) {
        int min_price = Integer.MAX_VALUE;// take a minimum price as maximum value
        int profit = 0;// profit to 0
        for(int i=0;i<prices.length;i++){ // traverse the loop
            if(prices[i] < min_price){// if price of min is less than min_price
                min_price = prices[i];// update min price
            }
            else if(prices[i] - min_price > profit){// if the price at i and min price is greater than profit
                profit = prices[i] - min_price; // update profit to differnce of price and min_price
            }
        }
        return profit;// and return the final profit.
    }
}
TIME COMPLEXITY - O(N) AND SPACE COMPLEXITY - O(1)
